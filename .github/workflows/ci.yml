name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  Static-Analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run static checks with tox
        run: tox run -e pre-commit,mypy,bandit,vermin

  Unit-Tests:
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13.0-beta.2"]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run unit tests with tox
        run: tox run -e pytest
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'coverage.xml'
          badge: true
          format: 'markdown'
          output: 'both'
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'

  Release:
    needs:
      - Static-Analysis
      - Unit-Tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    concurrency: release
    environment:
      name: pypi
      url: https://pypi.org/project/syndantic
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools setuptools-scm
    - name: Generate version file
      run: |
        python -m setuptools_scm --force-write-version-files
    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@1a324000f2251a9e722e77b128bf72712653813f
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Regenerate version file
      run: |
        python -m setuptools_scm --force-write-version-files

    - name: Publish package distributions to PyPI
      id: pypi-publish
      if: steps.release.outputs.released == 'true'
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
      with:
        verbose: true

    - name: Publish package distributions to GitHub Releases
      id: github-release
      if: steps.release.outputs.released == 'true'
      uses: python-semantic-release/upload-to-gh-release@fe6cc89b43d8cbf0f9ce3285df3f77ff69c9b5d4  # v9.8.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}
